Experiment 2 (Hello World)
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <TextView
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Hello World!"
 app:layout_constraintBottom_toBottomOf="parent"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 android:textSize="50sp"
 android:textColor="@color/black"
 android:textStyle="bold"
 app:layout_constraintTop_toTopOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>
MainActivity.java
package com.example.exp2;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
public class MainActivity extends AppCompatActivity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 }
}


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPERIMENT 3 (Display Name)
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <TextView
 android:id="@+id/textView"
 android:layout_width="wraaap_content"
 android:layout_height="wrap_content"
 android:layout_marginTop="80dp"
 android:text="Enter your name"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toTopOf="parent" />
 <EditText
 android:id="@+id/editTextTextPersonName"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_marginTop="40dp"
 android:ems="10"
 android:inputType="textPersonName"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toBottomOf="@+id/textView" />
 <Button
 android:id="@+id/button"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_marginTop="60dp"
 android:text="OKAY"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toBottomOf="@+id/editTextTextPersonName"
/>
 <TextView
 android:id="@+id/greeting_text_view"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_marginTop="40dp"
 android:text=""
 android:textStyle="italic"
 android:textColor="@color/black"
 android:textSize="40sp"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toBottomOf="@+id/button" />
</androidx.constraintlayout.widget.ConstraintLayout>
MainActivity.java
package com.example.exp3;
import androidx.appcompat.app.AppCompatActivity;
import android.annotation.SuppressLint;
import android.widget.*;
import android.view.View;
import android.os.Bundle;
public class MainActivity extends AppCompatActivity {
 private EditText editText;
 private Button button;
 private TextView greet;
 @SuppressLint("MissingInflatedId")
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 editText = findViewById(R.id.editTextTextPersonName);
 button = findViewById(R.id.button);
 greet = findViewById(R.id.greeting_text_view);
 button.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View view) {
 greet.setText("Hello, "
+editText.getText().toString()+"...!");
 }
 });
 }
}


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPERIMENT 4
User name and password showing screen
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:layout_margin="5dp">
 <TextView
 android:id="@+id/textView1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignParentTop="true"
 android:layout_centerHorizontal="true"
 android:textAppearance="?android:attr/textAppearanceLarge"
 android:textColor="#A4C639" />
 <!-- User name-->
 <TextView
 android:id="@+id/textView2"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/textView1"
 android:layout_alignParentLeft="true"
 android:layout_marginTop="23dp"
 android:text="User Name"
 android:textAppearance="?android:attr/textAppearanceLarge"
 android:textColor="#0099FF" />
 <!--password-->
 <EditText
 android:id="@+id/editText1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignBottom="@+id/textView2"
 android:layout_marginLeft="51dp"
 android:layout_marginBottom="1dp"
 android:layout_toRightOf="@+id/textView2"
 android:background="#CCCCCC"
 android:ems="10"
 android:inputType="textPersonName">
 <requestFocus />
 </EditText>
 <TextView
 android:id="@+id/textView3"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/textView2"
 android:layout_alignParentLeft="true"
 android:layout_marginTop="23dp"
 android:text="Password"
 android:textAppearance="?android:attr/textAppearanceLarge"
 android:textColor="#0099FF" />
 <!--address-->
 <EditText
 android:id="@+id/editText2"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignBottom="@+id/textView3"
 android:layout_marginLeft="63dp"
 android:layout_marginBottom="4dp"
 android:layout_toRightOf="@+id/textView3"
 android:background="#CCCCCC"
 android:ems="10"
 android:inputType="textPassword">
 <requestFocus />
 </EditText>
 <TextView
 android:id="@+id/textView4"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/textView3"
 android:layout_alignParentLeft="true"
 android:layout_marginTop="23dp"
 android:text="Address"
 android:textAppearance="?android:attr/textAppearanceLarge"
 android:textColor="#0099FF" />
 <!--Gender-->
 <EditText
 android:id="@+id/editText3"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignBottom="@+id/textView4"
 android:layout_marginLeft="74dp"
 android:layout_marginBottom="1dp"
 android:layout_toRightOf="@+id/textView4"
 android:background="#CCCCCC"
 android:ems="10"
 android:inputType="textPersonName">
 <requestFocus />
 </EditText>
 <TextView
 android:id="@+id/textView5"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/textView4"
 android:layout_alignParentLeft="true"
 android:layout_marginTop="23dp"
 android:text="Gender"
 android:textAppearance="?android:attr/textAppearanceLarge"
 android:textColor="#0099FF" />
 <RadioGroup
 android:id="@+id/r"
 android:layout_width="196dp"
 android:layout_height="wrap_content"
 android:layout_alignBottom="@+id/textView5"
 android:layout_marginLeft="88dp"
 android:layout_marginBottom="0dp"
 android:layout_toRightOf="@+id/textView5"
 android:orientation="horizontal">
 <RadioButton
 android:id="@+id/radioButton1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignBottom="@+id/textView5"
 android:layout_toRightOf="@+id/textView4"
 android:text="Male" />
 <RadioButton
 android:id="@+id/radioButton2"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignBottom="@+id/radioButton1"
 android:layout_toRightOf="@+id/radioButton1"
 android:text="Female" />
 </RadioGroup>
 <!--Date of birth-->
 <TextView
 android:id="@+id/textView6"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/textView5"
 android:layout_alignParentLeft="true"
 android:layout_marginTop="23dp"
 android:text="Date of Birth "
 android:textAppearance="?android:attr/textAppearanceLarge"
 android:textColor="#0099FF" />
 <!-- Age-->
 <EditText
 android:id="@+id/editTextDate2"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignBottom="@+id/textView6"
 android:layout_marginLeft="32dp"
 android:layout_marginBottom="0dp"
 android:layout_toRightOf="@+id/textView6"
 android:ems="10"
 android:inputType="date" />
 <TextView
 android:id="@+id/textView7"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/textView6"
 android:layout_alignParentLeft="true"
 android:layout_marginTop="23dp"
 android:text="Age "
 android:textAppearance="?android:attr/textAppearanceLarge"
 android:textColor="#0099FF" />
 <EditText
 android:id="@+id/editText4"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignBottom="@+id/textView7"
 android:layout_marginLeft="112dp"
 android:layout_marginBottom="0dp"
 android:layout_toRightOf="@+id/textView7"
 android:background="#CCCCCC"
 android:ems="10"
 android:inputType="number" />
 <requestFocus />
 <!-- State-->
 <TextView
 android:id="@+id/textView8"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/textView7"
 android:layout_alignParentLeft="true"
 android:layout_marginTop="23dp"
 android:text="State "
 android:textAppearance="?android:attr/textAppearanceLarge"
 android:textColor="#0099FF" />
 <Spinner
 android:id="@+id/spinner"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:layout_alignBottom="@+id/textView8"
 android:layout_toRightOf="@+id/textView8"
 />
 <!--Submit button-->
 <Button
 android:id="@+id/button1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/textView4"
 android:layout_alignParentLeft="true"
 android:layout_marginLeft="175dp"
 android:layout_marginTop="368dp"
 android:background="#0099FF"
 android:text="Submit"
 android:textColor="#FFFFFF" />
</RelativeLayout>
MainActivity.java
package com.example.exp4;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity implements
AdapterView.OnItemSelectedListener{
 Button mButton;
 EditText mEdit;
 TextView mText;
 Spinner sp;
 RadioGroup rb;
 String[] country = { "Andhra Pradesh","Telangana","Madhya
Pradesh","Gujarat","Goa","TamilNadu","Karnataka","Delhi" };
 @Override
 public void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 Spinner spin = (Spinner) findViewById(R.id.spinner);
 spin.setOnItemSelectedListener(this);
 ArrayAdapter aa = new
ArrayAdapter(this,android.R.layout.simple_spinner_item,country);

aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
 spin.setAdapter(aa);
 mButton = (Button) findViewById(R.id.button1);
 mButton.setOnClickListener(new View.OnClickListener() {
 public void onClick(View view){
 String s="";
 mEdit = (EditText) findViewById(R.id.editText1);
 s+="Hello " + mEdit.getText().toString() + "!\n";
 mEdit = (EditText) findViewById(R.id.editText3);
 s+="Address "+mEdit.getText().toString()+"\n";
 rb = (RadioGroup) findViewById(R.id.r);
 int d = rb.getCheckedRadioButtonId();
 RadioButton x;
 x = (RadioButton)findViewById(d);
 s+="Gender "+x.getText().toString()+"\n";
 mEdit = (EditText) findViewById(R.id.editTextDate2);
 s+="Date of birth "+mEdit.getText().toString()+"\n";
 mEdit = (EditText) findViewById(R.id.editText4);
 s+="Age "+mEdit.getText().toString()+"\n";
 sp = (Spinner) findViewById(R.id.spinner);
 s+="State "+sp.getSelectedItem().toString()+"\n";
 mText = (TextView) findViewById(R.id.textView1);
 mText.setText(s);
 }
 });
 }
 @Override
 public void onItemSelected(AdapterView<?> arg0, View arg1, int
position, long id) {
 Toast.makeText(getApplicationContext(), country[position],
Toast.LENGTH_LONG).show();
 }
 @Override
 public void onNothingSelected(AdapterView<?> arg0) {
// TODO Auto-generated method stub
 }
}


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPERIMENT 5
Pass value from one activity to another activity
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <Button
 android:id="@+id/button1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignParentLeft="true"
 android:layout_alignParentTop="true"
 android:layout_marginBottom="308dp"
 android:text="send"
 app:layout_constraintBottom_toBottomOf="parent"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintHorizontal_bias="0.498"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toBottomOf="@+id/editText2"
 app:layout_constraintVertical_bias="1.0" />
 <EditText
 android:id="@+id/editText1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignRight="@+id/button1"
 android:layout_alignParentTop="false"
 android:layout_marginTop="128dp"
 android:ems="10"
 android:hint="Enter name"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintHorizontal_bias="0.497"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toTopOf="parent"
 tools:ignore="MissingConstraints">
 <requestFocus />
 </EditText>
 <EditText
 android:id="@+id/editText2"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/editText1"
 android:layout_alignRight="@+id/button1"
 android:layout_marginTop="30dp"
 android:ems="10"
 android:hint="Enter password"
 android:inputType="textPassword"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintHorizontal_bias="0.497"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toBottomOf="@+id/editText1" />
</androidx.constraintlayout.widget.ConstraintLayout>
MainActivity.java
package com.example.exp5;
import static com.example.exp5.R.id;
import static com.example.exp5.R.layout;
import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
public class MainActivity extends Activity
{
 @Override
 protected void onCreate(Bundle savedInstanceState)
 {
 super.onCreate(savedInstanceState);
 setContentView(layout.activity_main);
 final EditText et=(EditText)findViewById(id.editText1);
 final EditText et1=(EditText)findViewById(id.editText2);
 Button send=(Button)findViewById(id.button1);
 send.setOnClickListener(new OnClickListener()
 {
 @Override
 public void onClick(View arg0)
 {
 String s=et.getText().toString();
 String s1=et1.getText().toString();
 Intent it=new
Intent(MainActivity.this,SecondActivity.class);
 it.putExtra("uname", s);
 it.putExtra("pwd", s1);
 startActivity(it);
 }
 });
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu)
 {
 getMenuInflater().inflate(R.menu.menu_main, menu);
 return true;
 }
}
Activity_second.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".SecondActivity">
 <TextView
 android:id="@+id/textView1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_alignParentStart="true"
 android:layout_alignParentTop="true"
 android:textColor="@color/black"
 android:textSize="30sp"
 android:textStyle="italic"
 app:layout_constraintBottom_toTopOf="@+id/textView2"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toTopOf="parent"
 app:layout_constraintVertical_bias="0.834"
 tools:ignore="RtlHardcoded" />
 <TextView
 android:id="@+id/textView2"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/textView1"
 android:layout_alignStart="@+id/textView1"
 android:layout_marginBottom="416dp"
 android:textColor="@color/black"
 android:textSize="30sp"
 android:textStyle="italic"
 app:layout_constraintBottom_toBottomOf="parent"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintHorizontal_bias="0.498"
 app:layout_constraintStart_toStartOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>
SecondActivity.java
package com.example.exp5;
import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.widget.TextView;
public class SecondActivity extends Activity
{
 @Override
 protected void onCreate(Bundle savedInstanceState)
 {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_second);
 TextView tv=(TextView)findViewById(R.id.textView1);
 TextView tv1=(TextView)findViewById(R.id.textView2);
 tv.setText("User Name :
"+getIntent().getExtras().getString("uname"));
 tv1.setText("Password :
"+getIntent().getExtras().getString("pwd"));
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu)
 {
 getMenuInflater().inflate(R.menu.menu_main , menu);
 return true;
 }
}


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPERIMENT 6
Send sms using intent
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:layout_gravity="center"
 android:gravity="center"
 tools:context=".MainActivity">
 <Button
 android:id="@+id/button"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_gravity="center"
 android:text="Send SMS" />
</LinearLayout>
MainActivity.java
package com.example.exp6;
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import java.util.Scanner;
public class MainActivity extends AppCompatActivity {
 Button sendsms;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 sendsms = findViewById(R.id.button);
 sendsms.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View view) {
 Intent it = new Intent(Intent.ACTION_VIEW,
 Uri.fromParts("sms","0123456789",null));
 it.putExtra("Message","Hello..!, How are you ?");
 startActivity(it);
 }
 });
 }
}


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPERIMENT 7
 Application using Fragments
activity_main.xml
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:orientation="vertical"
 android:padding="30dp"
 tools:context=".MainActivity">
 <!-- display two Button's and a FrameLayout to replace the Fragment's
-->
 <Button
 android:id="@+id/firstFragment"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:text="First Fragment"
 android:textSize="20sp" />
 <Button
 android:id="@+id/secondFragment"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:layout_marginTop="10dp"
 android:text="Second Fragment"
 android:textSize="20sp" />
 <FrameLayout
 android:id="@+id/frameLayout"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:layout_marginTop="10dp"
 />
</LinearLayout>
MainActivity.java
package com.example.exp7;
import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
 Button firstFragment, secondFragment;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
// get the reference of Button's
 firstFragment = (Button) findViewById(R.id.firstFragment);
 secondFragment = (Button) findViewById(R.id.secondFragment);
// perform setOnClickListener event on First Button
 firstFragment.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
// load First Fragment
 loadFragment(new FirstFragment());
 }
 });
// perform setOnClickListener event on Second Button
 secondFragment.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
// load Second Fragment
 loadFragment(new SecondFragment());
 }
 });
 }
 private void loadFragment(Fragment fragment) {
// create a FragmentManager
 FragmentManager fm = getFragmentManager();
// create a FragmentTransaction to begin the transaction and replace the
Fragment
 FragmentTransaction fragmentTransaction = fm.beginTransaction();
// replace the FrameLayout with new Fragment
 fragmentTransaction.replace(R.id.frameLayout, fragment);
 fragmentTransaction.commit(); // save the changes
 }
}
fragment_first.xml
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context="com.example.exp7.FirstFragment">
 <!--TextView and Button displayed in First Fragment -->
 <TextView
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_centerHorizontal="true"
 android:layout_marginTop="100dp"
 android:text="This is First Fragment"
 android:textSize="25sp" />
 <Button
 android:id="@+id/firstButton"
 android:layout_width="373dp"
 android:layout_height="72dp"
 android:layout_centerInParent="true"
 android:layout_marginLeft="20dp"
 android:layout_marginRight="20dp"
 android:text="First Fragment"
 android:textSize="20sp"
 android:textStyle="bold" />
</RelativeLayout>
FirstFragment.java
package com.example.exp7;
import android.app.Fragment;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Toast;
public class FirstFragment extends Fragment {
 View view;
 Button firstButton;
 @Override
 public View onCreateView(LayoutInflater inflater, ViewGroup container,
 Bundle savedInstanceState) {
// Inflate the layout for this fragment
 view = inflater.inflate(R.layout.fragment_first, container, false);
// get the reference of Button
 firstButton = (Button) view.findViewById(R.id.firstButton);
// perform setOnClickListener on first Button
 firstButton.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
// display a message by using a Toast
 Toast.makeText(getActivity(), "First Fragment",
Toast.LENGTH_LONG).show();
 }
 });
 return view;
 }
}
fragment_second.xml
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_height="match_parent"
 tools:context="com.example.exp7.SecondFragment"
android:layout_width="wrap_content">
 <!--TextView and Button displayed in Second Fragment -->
 <TextView
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_centerHorizontal="true"
 android:layout_marginTop="100dp"
 android:text="This is Second Fragment"
 android:textSize="25sp" />
 <Button
 android:id="@+id/secondButton"
 android:layout_width="371dp"
 android:layout_height="74dp"
 android:layout_centerInParent="true"
 android:layout_marginLeft="20dp"
 android:layout_marginRight="20dp"
 android:text="Second Fragment"
 android:textSize="20sp"
 android:textStyle="bold" />
</RelativeLayout>
SecondFragment.java
package com.example.exp7;
import android.app.Fragment;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Toast;
public class SecondFragment extends Fragment {
 View view;
 Button secondButton;
 @Override
 public View onCreateView(LayoutInflater inflater, ViewGroup container,
 Bundle savedInstanceState) {
// Inflate the layout for this fragment
 view = inflater.inflate(R.layout.fragment_second, container,
false);
// get the reference of Button
 secondButton = (Button) view.findViewById(R.id.secondButton);
// perform setOnClickListener on second Button
 secondButton.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
// display a message by using a Toast
 Toast.makeText(getActivity(), "Second Fragment",
Toast.LENGTH_LONG).show();
 }
 });
 return view;
 }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPERIMENT 8
 Application using Radio Buttons
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:orientation="vertical"
 tools:context=".MainActivity">
 <RadioGroup
 android:id="@+id/radioGroup"
 android:layout_width="230dp"
 android:layout_height="wrap_content"
 android:layout_gravity="center"
 android:layout_marginTop="40dp"
 android:orientation="vertical">
 <RadioButton
 android:id="@+id/radio_button_1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Male"
 android:textSize="20sp" />
 <RadioButton
 android:id="@+id/radio_button_2"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Female"
 android:textSize="20sp" />
 </RadioGroup>
 <Button
 android:id="@+id/button"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_gravity="center"
 android:layout_marginTop="16dp"
 android:text="Show Selection" />
</LinearLayout>
MainActivity.java
package com.example.exp8;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
 private RadioGroup radioGroup;
 private RadioButton radioButton;
 private Button button;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 radioGroup = findViewById(R.id.radioGroup);
 button = findViewById(R.id.button);
 button.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 int selectedId = radioGroup.getCheckedRadioButtonId();
 radioButton = findViewById(selectedId);
 String text = radioButton.getText().toString();
 Toast.makeText(getApplicationContext(), "Selected option: "
+ text, Toast.LENGTH_SHORT).show();
 }
 });
 }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPERIMENT 9
 Application for Menu
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <TextView
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Menu Experiment ra mowa"
 app:layout_constraintBottom_toBottomOf="parent"
 app:layout_constraintEnd_toEndOf="parent"
 app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toTopOf="parent" />
</android.support.constraint.ConstraintLayout>
MainActivity.java
package com.example.e9;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu) {
 MenuInflater inflater = getMenuInflater();
 inflater.inflate(R.menu.e9_menu, menu);
 return true;
 }
 @Override
 public boolean onOptionsItemSelected(MenuItem item) {
 switch (item.getItemId()) {
 case R.id.item1:
 Toast.makeText(this, "Menu selected",
Toast.LENGTH_SHORT).show();
 return true;
 case R.id.item2:
 Toast.makeText(this, "Print selected",
Toast.LENGTH_SHORT).show();
 return true;
 case R.id.item3:
 Toast.makeText(this, "Settings selected",
Toast.LENGTH_SHORT).show();
 return true;
 case R.id.subitem1:
 Toast.makeText(this, "Zoom In selected",
Toast.LENGTH_SHORT).show();
 return true;
 case R.id.subitem2:
 Toast.makeText(this, "Zoom Out selected",
Toast.LENGTH_SHORT).show();
 return true;
 default:
 return super.onOptionsItemSelected(item);
 }
 }
}
e9_menu.xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto">
 <item
 android:id="@+id/item1"
 android:title="menu"
 app:showAsAction="ifRoom" />
 <item
 android:id="@+id/item2"
 android:title="print"
 app:showAsAction="never" />
 <item
 android:id="@+id/item3"
 android:title="settings"
 app:showAsAction="never">
 <menu>
 <item
 android:id="@+id/subitem1"
 android:title="zoom In" />
 <item
 android:id="@+id/subitem2"
 android:title="Zoom Out" />
 </menu>
 </item>
</menu>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPERIMENT 10
Application that stores user details in the data base table
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:padding="16dp"
 tools:context=".MainActivity">
 <EditText
 android:id="@+id/etName"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:hint="Name"
 android:inputType="text" />
 <EditText
 android:id="@+id/etNum"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:layout_below="@id/etName"
 android:hint="Number"
 android:inputType="text" />
 <EditText
 android:id="@+id/etEmail"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:layout_below="@id/etNum"
 android:hint="Email"
 android:inputType="textEmailAddress" />
 <Button
 android:id="@+id/btnRegister"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:layout_below="@id/etEmail"
 android:text="Register" />
 <Button
 android:id="@+id/btnShow"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:layout_below="@id/btnRegister"
 android:text="Show" />
 <TextView
 android:id="@+id/tvResult"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:layout_below="@id/btnShow"
 android:layout_marginTop="16dp" />
</RelativeLayout>
MainActivity.java
package com.example.exp10;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
public class MainActivity extends AppCompatActivity {
 private EditText etName, etNum, etEmail;
 private Button btnRegister, btnShow;
 private TextView tvResult;
 private DatabaseHelper databaseHelper;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 etName = findViewById(R.id.etName);
 etNum = findViewById(R.id.etNum);
 etEmail = findViewById(R.id.etEmail);
 btnRegister = findViewById(R.id.btnRegister);
 btnShow = findViewById(R.id.btnShow);
 tvResult = findViewById(R.id.tvResult);
 databaseHelper = new DatabaseHelper(this);
 btnRegister.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 String name = etName.getText().toString();
 String number = etNum.getText().toString();
 String email = etEmail.getText().toString();
 // Insert data into the database
 databaseHelper.insertData(name,number, email);
 etName.setText("");
 etNum.setText("");
 etEmail.setText("");
 }
 });
 btnShow.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 // Retrieve data from the database and display in TextView
 String data = databaseHelper.getData();
 tvResult.setText(data);
 }
 });
 }
}
DatabaseHelper.java
package com.example.exp10;
import android.annotation.SuppressLint;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
public class DatabaseHelper extends SQLiteOpenHelper {
 private static final String DATABASE_NAME = "registration1.db";
 private static final int DATABASE_VERSION = 1;
 private static final String TABLE_NAME = "users";
 private static final String COLUMN_ID = "id";
 private static final String COLUMN_NAME = "name";
 private static final String COLUMN_NUMBER = "number";
 private static final String COLUMN_EMAIL = "email";
 public DatabaseHelper(Context context) {
 super(context, DATABASE_NAME, null, DATABASE_VERSION);
 }
 @Override
 public void onCreate(SQLiteDatabase db) {
 String createTableQuery = "CREATE TABLE " + TABLE_NAME + " (" +
 COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
 COLUMN_NAME + " TEXT, " + COLUMN_NUMBER + " TEXT, " +
 COLUMN_EMAIL + " TEXT);";
 db.execSQL(createTableQuery);
 }
 @Override
 public void onUpgrade(SQLiteDatabase db, int oldVersion, int
newVersion) {
 String dropTableQuery = "DROP TABLE IF EXISTS " + TABLE_NAME;
 db.execSQL(dropTableQuery);
 onCreate(db);
 }
 // Insert data into the database
 public void insertData(String name,String number, String email) {
 SQLiteDatabase db = this.getWritableDatabase();
 ContentValues values = new ContentValues();
 values.put(COLUMN_NAME, name);
 values.put(COLUMN_NUMBER, number);
 values.put(COLUMN_EMAIL, email);
 db.insert(TABLE_NAME, null, values);
 db.close();
 }
 // Retrieve data from the database
 public String getData() {
 SQLiteDatabase db = this.getReadableDatabase();
 Cursor cursor = db.rawQuery("SELECT * FROM " + TABLE_NAME, null);
 StringBuilder stringBuilder = new StringBuilder();
 if (cursor.moveToFirst()) {
 do {
 @SuppressLint("Range") int id =
cursor.getInt(cursor.getColumnIndex(COLUMN_ID));
 @SuppressLint("Range") String name =
cursor.getString(cursor.getColumnIndex(COLUMN_NAME));
 @SuppressLint("Range") String number =
cursor.getString(cursor.getColumnIndex(COLUMN_NUMBER));
 @SuppressLint("Range") String email =
cursor.getString(cursor.getColumnIndex(COLUMN_EMAIL));
 stringBuilder.append("ID: ").append(id).append(", Name:
").append(name).append(", Number: ").append(number).append(", Email:
").append(email).append("\n");
 } while (cursor.moveToNext());
 }
 cursor.close();
 db.close();
 return stringBuilder.toString();
 }
}



-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
EXPERIMENT NO.1
INSTALLING AND RUNNING APPLICATIONS ON ANDROID STUDIO
Step 1 - System Requirements
The required tools to develop Android applications are open source and can be downloaded from
the Web. Following is the list of software's you will need before you start your Android application
programming.
Java JDK5 or later version
Java Runtime Environment (JRE) 6
Android Studio
Step 2 - Setup Android Studio
Android Studio is the official IDE for android application development.It works based on IntelliJ
IDEA, You can download the latest version of android studio from Android Studio 2.2 Download, If
you are new to installing Android Studio on windows,you will find a file, which is named
as android-studio-bundle-143.3101438-windows.exe.So just download and run on windows
machine according to android studio wizard guideline.
If you are installing Android Studio on Mac or Linux, You can download the latest version
from Android Studio Mac Download,or Android Studio Linux Download, check the instructions
provided along with the downloaded file for Mac OS and Linux. This tutorial will consider that you
are going to setup your environment on Windows machine having Windows 8.1 operating system.
Installation
So let's launch Android Studio.exe,Make sure before launch Android Studio, Our Machine should
required installed Java JDK. To install Java JDK,take a references of Android environment setup
Once you launched Android Studio, its time to mention JDK7 path or later version in android
studio installer.
Below the image initiating JDK to android SDK
Need to check the components, which are required to create applications, below the image has
selected Android Studio, Android SDK, Android Virtual Machine and performance(Intel chip).
Need to specify the location of local machine path for Android studio and Android SDK, below the
image has taken default location of windows 8.1 x64 bit architecture.
Need to specify the ram space for Android emulator by default it would take 512MB of local
machine RAM.
At final stage, it would extract SDK packages into our local machine, it would take a while time to
finish the task and would take 2626MB of Hard disk space.
After done all above steps perfectly, you must get finish button and it gonna be open android
studio project with Welcome to android studio message as shown below
You can start your application development by calling start a new android studio project. in a new
installation frame should ask Application name, package information and location of the project.
After entered application name, it going to be called select the form factors your application runs
on, here need to specify Minimum SDK, in our tutorial, I have declared as API23: Android
6.0(Mashmallow)
The next level of installation should contain selecting the activity to mobile, it specifies the default
layout for Applications
At the final stage it going to be open development tool to write the application code.
Step 3 - Create Android Virtual Device
To test your Android applications, you will need a virtual Android device. So before we start
writing our code, let us create an Android virtual device. Launch Android AVD Manager Clicking
AVD_Manager icon as shown below
After Click on a virtual device icon, it going to be shown by default virtual devices which are
present on your SDK, or else need to create a virtual device by clicking Create new Virtual
device button
If your AVD is created successfully it means your environment is ready for Android application
development. If you like, you can close this window using top-right cross button. Better you restart your machine and once you are done with this last step, you are ready to proceed for your
first Android example but before that we will see few more important concepts related to Android
Application Development.
Exercise Program
Write the steps in installing Android Studio in Windows and Linux.
